let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
onoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .''
onoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.''
nnoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .''
nnoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.''
onoremap <buffer> <silent> <expr> ][ ':silent keeppatterns /'.b:block_end  .''
onoremap <buffer> <silent> <expr> ]] ':silent keeppatterns /'.b:block_begin.''
nnoremap <buffer> <silent> <expr> ][ ':silent keeppatterns /'.b:block_end  .''
nnoremap <buffer> <silent> <expr> ]] ':silent keeppatterns /'.b:block_begin.''
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=120
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal cursorlineopt=both
setlocal define=def\\(macro\\|guard\\|delegate\\)\\=p\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'elixir'
setlocal filetype=elixir
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croqlj
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=elixir#util#get_filename(v:fname)
setlocal indentexpr=elixir#indent(v:lnum)
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e,=after,=catch,=do,=else,=end,=rescue,*<Return>,=->,=|>,=<>,0},0],0)
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$,!,?
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal list
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=lib/**,src/**,test/**,deps/**/lib/**,deps/**/src/**,.,/usr/include,,
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=2
setlocal noshortname
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=auto
setlocal smartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(2)
setlocal suffixesadd=.ex,.exs,.eex,.leex,.sface,.erl,.xrl,.yrl,.hrl
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'elixir'
setlocal syntax=elixir
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tagfunc=
setlocal tags=
setlocal termwinkey=
setlocal termwinscroll=10000
setlocal termwinsize=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal wincolor=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 5 - ((4 * winheight(0) + 29) / 59)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
5
normal! 021|
let &so = s:so_save | let &siso = s:siso_save
nohlsearch
doautoall SessionLoadPost
" vim: set ft=vim :
